/**
 * \file MIDI_behaviour.ino
 * \brief code for the keyboard MIDI behaviour
 * \author Brice Croix
 */


/**
 * \var MIDI_NOTES
 * \brief MIDI code for each note
 */
const uint8_t MIDI_NOTES[] = {
  0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, //C0 to B0
  0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, //C1 to B1
  0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, //C2 to B2
  0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, //C3 to B3
  0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, //C4 to B4
  0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, //C5 to B5
  0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, //C6 to B6
  0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, //C7 to B7
  0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, //C8 to B8
};


/**
 * \fn init_serial()
 * \brief initialize the serial peripheral interface
 */
void init_serial(){
  // Enable SPI
  SPCR |= 0x40;
  // Disable SPI interrupts
  SPCR &= ~0x80;
  // LSB first
  SPCR |= 0x20;
  // Master mode
  SPCR |= 0x10;
  // Baud rate
  Serial.begin(9600);
}

void midi_behaviour(){
  // Turn OFF analog LED
  PORTB &= ~(1<<DDB5);

  // End the initialization process
  init_serial();
  // Enable interrupts
  SREG |= 0x80;

  while(1){

  }
}
